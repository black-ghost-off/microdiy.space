name: Auto Deploy to S3

on:
  push:
    branches:
      - dev
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Hugo
      run: |
        sudo apt-get update
        sudo apt-get install -y hugo
  
    - name: Set baseURL based on branch
      run: |
        if [ "${{ github.ref_name }}" == "main" ]; then
          echo "Setting production baseURL"
          echo 'baseURL = "https://microdiy.space/"' | cat - hugo.toml > temp && mv temp hugo.toml
        elif [ "${{ github.ref_name }}" == "dev" ]; then
          echo "Setting development baseURL"
          echo 'baseURL = "https://dev.microdiy.space/"' | cat - hugo.toml > temp && mv temp hugo.toml
        fi
    

    - name: Build with Hugo
      run: |
        # Build the site with baseURL overridden by baseurl_config.toml
        hugo --config hugo.toml,baseurl_config.toml --minify

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set deployment environment
      run: |
        if [ "${{ github.ref_name }}" == "main" ]; then
          echo "Deploying to Production"
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_PROD }}" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_PROD }}" >> $GITHUB_ENV
        elif [ "${{ github.ref_name }}" == "dev" ]; then
          echo "Deploying to Development"
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_DEV }}" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_DEV }}" >> $GITHUB_ENV
        fi

    - name: Sync S3 bucket
      run: |
        aws s3 sync ./public s3://${{ env.S3_BUCKET_NAME }} --delete --acl public-read

    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
